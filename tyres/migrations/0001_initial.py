# Generated by Django 4.2.7 on 2025-06-09 22:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('type', models.CharField(choices=[('tyre', 'Шины'), ('disk', 'Диски'), ('chem', 'Автохимия'), ('other', 'Другое')], db_index=True, default='other', max_length=20, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='FavouriteRim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='RimModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название')),
                ('brand', models.CharField(db_index=True, max_length=100, verbose_name='Бренд')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to='rims/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Модель диска',
                'verbose_name_plural': 'Модели дисков',
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RimVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diameter', models.FloatField(verbose_name='Диаметр')),
                ('width', models.FloatField(verbose_name='Ширина')),
                ('bolt_pattern', models.CharField(max_length=50, verbose_name='Тип крепления')),
                ('offset', models.CharField(blank=True, max_length=20, verbose_name='Вылет (ET)')),
                ('dia', models.CharField(blank=True, max_length=20, verbose_name='DIA')),
                ('color', models.CharField(blank=True, max_length=50, verbose_name='Цвет')),
                ('material', models.CharField(max_length=50, verbose_name='Материал')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('stock', models.IntegerField(default=0, verbose_name='Количество на складе')),
                ('image', models.ImageField(blank=True, null=True, upload_to='rims/variants/', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Вариант диска',
                'verbose_name_plural': 'Варианты дисков',
                'ordering': ['model__brand', 'model__name', 'diameter', 'width'],
            },
        ),
        migrations.CreateModel(
            name='TyreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название')),
                ('brand', models.CharField(db_index=True, max_length=100, verbose_name='Бренд')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to='tyres/', verbose_name='Изображение')),
            ],
            options={
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TyreVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.IntegerField(validators=[django.core.validators.MinValueValidator(125), django.core.validators.MaxValueValidator(445)], verbose_name='Ширина')),
                ('profile', models.IntegerField(validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(100)], verbose_name='Профиль')),
                ('radius', models.IntegerField(validators=[django.core.validators.MinValueValidator(13), django.core.validators.MaxValueValidator(24)], verbose_name='Радиус')),
                ('season', models.CharField(choices=[('summer', 'Летние'), ('winter', 'Зимние'), ('all_season', 'Всесезонные')], db_index=True, max_length=20, verbose_name='Сезон')),
                ('studded', models.BooleanField(default=False, verbose_name='Шипованная')),
                ('speed_index', models.CharField(choices=[('Q', 'Q (160 км/ч)'), ('R', 'R (170 км/ч)'), ('S', 'S (180 км/ч)'), ('T', 'T (190 км/ч)'), ('H', 'H (210 км/ч)'), ('V', 'V (240 км/ч)'), ('W', 'W (270 км/ч)'), ('Y', 'Y (300 км/ч)'), ('ZR', 'ZR (>240 км/ч)')], max_length=4, verbose_name='Индекс скорости')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество на складе')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='tyres.tyremodel')),
            ],
            options={
                'ordering': ['model__brand', 'model__name', 'width', 'profile', 'radius'],
            },
        ),
        migrations.AddIndex(
            model_name='tyremodel',
            index=models.Index(fields=['brand', 'name'], name='tyres_tyrem_brand_ac7bfa_idx'),
        ),
        migrations.AddField(
            model_name='rimvariant',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='tyres.rimmodel'),
        ),
        migrations.AddIndex(
            model_name='rimmodel',
            index=models.Index(fields=['brand', 'name'], name='tyres_rimmo_brand_a7d348_idx'),
        ),
        migrations.AddField(
            model_name='favouriterim',
            name='rim_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourited_by_rims', to='tyres.rimvariant'),
        ),
        migrations.AddField(
            model_name='favouriterim',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourite_rims', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favourite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favourite',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourited_by', to='tyres.tyrevariant'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='tyres.category'),
        ),
        migrations.AddIndex(
            model_name='tyrevariant',
            index=models.Index(fields=['width', 'profile', 'radius'], name='tyres_tyrev_width_7a5485_idx'),
        ),
        migrations.AddIndex(
            model_name='tyrevariant',
            index=models.Index(fields=['season'], name='tyres_tyrev_season_516cad_idx'),
        ),
        migrations.AddIndex(
            model_name='tyrevariant',
            index=models.Index(fields=['price'], name='tyres_tyrev_price_6e55ef_idx'),
        ),
        migrations.AddIndex(
            model_name='rimvariant',
            index=models.Index(fields=['diameter', 'width', 'bolt_pattern'], name='tyres_rimva_diamete_27acc7_idx'),
        ),
        migrations.AddIndex(
            model_name='rimvariant',
            index=models.Index(fields=['price'], name='tyres_rimva_price_c036e1_idx'),
        ),
        migrations.AddIndex(
            model_name='favouriterim',
            index=models.Index(fields=['user', 'created'], name='tyres_favou_user_id_5e98d5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favouriterim',
            unique_together={('user', 'rim_variant')},
        ),
        migrations.AddIndex(
            model_name='favourite',
            index=models.Index(fields=['user', 'added_at'], name='tyres_favou_user_id_12fd60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favourite',
            unique_together={('user', 'variant')},
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['type', 'name'], name='tyres_categ_type_cc3040_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='tyres_categ_parent__a2c170_idx'),
        ),
    ]
